@startuml

!pragma teoz true

participant "User program(Thread1)" as ruby1
participant "execjs Context1" as context1
participant "Node.js process1" as node1
participant "User program(Thread2)" as ruby2
participant "execjs Context2" as context2
participant "Node.js process2" as node2

create context1
ruby1 -> context1 : context1 = ExecJS.compile(initial_source1)
create context2
ruby2 -> context2 : context2 = ExecJS.compile(initial_source2)
create node1
context1 -> node1 : spawn
create node2
context2 -> node2 : spawn
context1 -> node1 : eval(initial_source1)
& context2 -> node2 : eval(initial_source2)

ruby1 -> context1 : context1.call(source1)
& ruby2 -> context2 : context2.call(source2)
context1 -> node1 : eval(source1)
& context2 -> node2 : eval(source2)
node1 -> context1 : result: string
& node2 -> context2 : result: string
context1 -> ruby1 : result: Ruby object
& context2 -> ruby2 : result: Ruby object

ruby1 -> context1 : context1.call(source3)
& ruby2 -> context2 : context2.call(source4)
context1 -> node1 : eval(source3)
& context2 -> node2 : eval(source4)
node1 -> context1 : result: string
& node2 -> context2 : result: string
context1 -> ruby1 : result: Ruby object
& context2 -> ruby2 : result: Ruby object
@enduml
